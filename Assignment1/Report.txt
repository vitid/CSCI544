Assignment 1 Report

Name: Vitid Nakareseisoon

1. Performance on the development data with 100% of the training data
1a. spam precision: 0.993088194636439
1b. spam recall: 0.9774149659863945
1c. spam F1 score: 0.9851892484914975
1d. ham precision:0.9467265725288831
1e. ham recall: 0.9833333333333333
1f. ham F1 score: 0.9646827992151734

2. Performance on the development data with 10% of the training data
2a. spam precision: 0.9893527598767161
2b. spam recall: 0.9608163265306122
2c. spam F1 score: 0.9748757592490337
2d. ham precision: 0.9103362391033624
2e. ham recall: 0.9746666666666667
2f. ham F1 score: 0.9414037347070188

3. Description of enhancement(s) you tried (e.g., different approach(es) to smoothing, treating common words differently, dealing with unknown words differently):
I developed a script "nbclassify_modify.py" that receives additional {smoothing_number} and {threshold_key_length} arguments. The script will:
(1) Find the 50 most frequent tokens from Ham and Spam emails and intersect them. The script will ignore frequent tokens that co-occurred together.
(2) Perform add-{smoothing_number} smoothing based on the received parameter {smoothing_number}.
(3) Ignore tokens that have a length less than or equal {threshold_key_length}.

By playing around with the parameters, I found that providing smoothing factor higher than 1 tends to give worse performance and the optimal value of {threshold_key_length} is around 1 - 2. The script can be invoked by calling: nbclassify_modify.py {test_folder_path} {smoothing_number} {threshold_key_length}.

For this task, I decided to use {smoothing_number} = 1 and {threshold_key_length} = 2.

4. Best performance results based on enhancements. Note that these could be the same or worse than the standard implementation.
4a. spam precision: 0.9969646799116998
4b. spam recall: 0.9831292517006802
4c. spam F1 score: 0.9899986299493081
4d. ham precision: 0.9600257898130239
4e. ham recall: 0.9926666666666667
4f. ham F1 score: 0.9760734185512947
